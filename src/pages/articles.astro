---
import { format } from "date-fns";
import BaseLayout from "../layouts/BaseLayout.astro";
import BlogPost from "../components/BlogPost.astro";

const pageTitle = "Articles | Ganessh Kumar";
const pageDescription = "Articles written by Ganessh Kumar";
const currentPage = "Articles";
const allPosts = await Astro.glob("../pages/articles/*.md");
const allPostsByYear = allPosts.reduce((acc: any, post) => {
  const year = format(new Date(post.frontmatter.pubDate), "yyyy");
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(post);
  return acc;
}, {});
---

<BaseLayout
  pageTitle={pageTitle}
  pageDescription={pageDescription}
  currentPage={currentPage}
>
  <div
    class="flex flex-col h-full max-w-5xl mx-auto bg-white overflow-hidden px-4"
  >
    <p class="text-3xl my-2">
      <h1 class="font-bold text-3xl">
        <span
          class="tracking-wide underline decoration-sky-500 decoration-4 underline-offset-2"
          >Articles</span
        >
      </h1>
    </p>

    <div>
      {
        Object.keys(allPostsByYear)
          .sort((a, b) => Number(b) - Number(a))
          .map((year) => {
            return (
              <>
                <h2 class="text-2xl font-bold my-2 mt-12">{year}</h2>
                <div class="grid grid-cols-1 gap-x-1 gap-y-1 my-5 divide-y">
                  {allPostsByYear[year].reverse().map((post: any) => (
                    <BlogPost post={post} />
                  ))}
                </div>
              </>
            );
          })
      }
    </div>
  </div>
</BaseLayout>
