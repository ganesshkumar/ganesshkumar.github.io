---
import { format } from "date-fns";
import BaseLayout from "../layouts/BaseLayout.astro";
import BlogPost from "../components/BlogPost.astro";

const pageTitle = "Articles | Ganessh Kumar";
const pageDescription = "Articles written by Ganessh Kumar";
const currentPage = "Articles";
const allPosts = await Astro.glob("../pages/articles/*.md");
const allPostsByYear = allPosts.reduce((acc: any, post) => {
  const year = format(new Date(post.frontmatter.pubDate), "yyyy");
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(post);
  return acc;
}, {});

const canonicalUrl = new URL(Astro.url.pathname, Astro.site)
  .toString()
  .replace(/\/$/, "");

const ldSchema = {
  "@context": "https://schema.org",
  "@type": "Article",
  url: canonicalUrl,
  datePublished: allPosts[0].frontmatter.pubDate,
  dateMofified: allPosts[allPosts.length - 1].frontmatter.pubDate,
  headline: pageTitle,
  name: pageTitle,
  description: pageDescription,
  author: {
    "@type": "Person",
    "@id": "https://www.ganesshkumar.com/author/ganesshkumar/#Person",
    name: "Ganessh Kumar",
    url: "https://www.ganesshkumar.com",
    image: {
      "@type": "ImageObject",
      "@id":
        "https://secure.gravatar.com/avatar/3c574ac0072970fe85bebda60fa7d6b8?size=256",
      url: "https://secure.gravatar.com/avatar/3c574ac0072970fe85bebda60fa7d6b8?size=256",
      height: 256,
      width: 256,
    },
  },
  publisher: {
    "@type": "Organization",
    "@id": "https://www.ganesshkumar.com",
    name: "Ganessh Kumar",
    logo: {
      "@type": "ImageObject",
      "@id":
        "https://secure.gravatar.com/avatar/3c574ac0072970fe85bebda60fa7d6b8?size=256",
      url: "https://secure.gravatar.com/avatar/3c574ac0072970fe85bebda60fa7d6b8?size=256",
      height: 256,
      width: 256,
    },
  },
};
---

<BaseLayout
  pageTitle={pageTitle}
  pageDescription={pageDescription}
  currentPage={currentPage}
  ldSchema={ldSchema}
>
  <div class="bg-white dark:bg-gray-800">
    <div class="flex flex-col h-full max-w-5xl mx-auto overflow-hidden px-4">
      <p class="text-3xl my-2">
        <h1 class="font-bold text-3xl">
          <span
            class="tracking-wide underline decoration-sky-500 decoration-4 underline-offset-2 dark:text-slate-100"
            >Articles</span
          >
        </h1>
      </p>

      <div>
        {
          Object.keys(allPostsByYear)
            .sort((a, b) => Number(b) - Number(a))
            .map((year) => {
              return (
                <>
                  <h2 class="text-2xl font-bold my-2 mt-12 dark:text-slate-100">
                    {year}
                  </h2>
                  <div class="grid grid-cols-1 gap-x-1 gap-y-1 my-5 divide-y">
                    {allPostsByYear[year].reverse().map((post: any) => (
                      <BlogPost post={post} />
                    ))}
                  </div>
                </>
              );
            })
        }
      </div>
    </div>
  </div>
</BaseLayout>
